{
 "Resources": {
  "ApplicationVpc8AE6A859": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/Resource"
   }
  },
  "ApplicationVpcPublicSubnet1Subnet7014005F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ApplicationVpc8AE6A859"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PublicSubnet1/Subnet"
   }
  },
  "ApplicationVpcPublicSubnet1RouteTable6A647E6A": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ApplicationVpc8AE6A859"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PublicSubnet1/RouteTable"
   }
  },
  "ApplicationVpcPublicSubnet1RouteTableAssociation802F127D": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ApplicationVpcPublicSubnet1RouteTable6A647E6A"
    },
    "SubnetId": {
     "Ref": "ApplicationVpcPublicSubnet1Subnet7014005F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "ApplicationVpcPublicSubnet1DefaultRoute56736F6C": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "ApplicationVpcIGWAE2F3715"
    },
    "RouteTableId": {
     "Ref": "ApplicationVpcPublicSubnet1RouteTable6A647E6A"
    }
   },
   "DependsOn": [
    "ApplicationVpcVPCGWF6FDF6ED"
   ],
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PublicSubnet1/DefaultRoute"
   }
  },
  "ApplicationVpcPublicSubnet1EIP13A4D91E": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PublicSubnet1/EIP"
   }
  },
  "ApplicationVpcPublicSubnet1NATGateway945161E1": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "ApplicationVpcPublicSubnet1EIP13A4D91E",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "ApplicationVpcPublicSubnet1Subnet7014005F"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "ApplicationVpcPublicSubnet1DefaultRoute56736F6C",
    "ApplicationVpcPublicSubnet1RouteTableAssociation802F127D"
   ],
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PublicSubnet1/NATGateway"
   }
  },
  "ApplicationVpcPublicSubnet2SubnetE792D9E8": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ApplicationVpc8AE6A859"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PublicSubnet2/Subnet"
   }
  },
  "ApplicationVpcPublicSubnet2RouteTableA5B5B5A5": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ApplicationVpc8AE6A859"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PublicSubnet2/RouteTable"
   }
  },
  "ApplicationVpcPublicSubnet2RouteTableAssociation396F9A40": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ApplicationVpcPublicSubnet2RouteTableA5B5B5A5"
    },
    "SubnetId": {
     "Ref": "ApplicationVpcPublicSubnet2SubnetE792D9E8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "ApplicationVpcPublicSubnet2DefaultRoute7C19233F": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "ApplicationVpcIGWAE2F3715"
    },
    "RouteTableId": {
     "Ref": "ApplicationVpcPublicSubnet2RouteTableA5B5B5A5"
    }
   },
   "DependsOn": [
    "ApplicationVpcVPCGWF6FDF6ED"
   ],
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PublicSubnet2/DefaultRoute"
   }
  },
  "ApplicationVpcPublicSubnet2EIPC49DC683": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PublicSubnet2/EIP"
   }
  },
  "ApplicationVpcPublicSubnet2NATGatewayFE72F43F": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "ApplicationVpcPublicSubnet2EIPC49DC683",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "ApplicationVpcPublicSubnet2SubnetE792D9E8"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "ApplicationVpcPublicSubnet2DefaultRoute7C19233F",
    "ApplicationVpcPublicSubnet2RouteTableAssociation396F9A40"
   ],
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PublicSubnet2/NATGateway"
   }
  },
  "ApplicationVpcPrivateSubnet1Subnet2EB6F2CA": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ApplicationVpc8AE6A859"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PrivateSubnet1/Subnet"
   }
  },
  "ApplicationVpcPrivateSubnet1RouteTable77A0065C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ApplicationVpc8AE6A859"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PrivateSubnet1/RouteTable"
   }
  },
  "ApplicationVpcPrivateSubnet1RouteTableAssociationAAD57E37": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ApplicationVpcPrivateSubnet1RouteTable77A0065C"
    },
    "SubnetId": {
     "Ref": "ApplicationVpcPrivateSubnet1Subnet2EB6F2CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "ApplicationVpcPrivateSubnet1DefaultRoute12A237D9": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "ApplicationVpcPublicSubnet1NATGateway945161E1"
    },
    "RouteTableId": {
     "Ref": "ApplicationVpcPrivateSubnet1RouteTable77A0065C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "ApplicationVpcPrivateSubnet2SubnetD832FF78": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ApplicationVpc8AE6A859"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PrivateSubnet2/Subnet"
   }
  },
  "ApplicationVpcPrivateSubnet2RouteTableAFAC3CEF": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ApplicationVpc8AE6A859"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PrivateSubnet2/RouteTable"
   }
  },
  "ApplicationVpcPrivateSubnet2RouteTableAssociation192E55E3": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ApplicationVpcPrivateSubnet2RouteTableAFAC3CEF"
    },
    "SubnetId": {
     "Ref": "ApplicationVpcPrivateSubnet2SubnetD832FF78"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "ApplicationVpcPrivateSubnet2DefaultRouteA08F9FF8": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "ApplicationVpcPublicSubnet2NATGatewayFE72F43F"
    },
    "RouteTableId": {
     "Ref": "ApplicationVpcPrivateSubnet2RouteTableAFAC3CEF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "ApplicationVpcIGWAE2F3715": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElizaStack/ApplicationVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/IGW"
   }
  },
  "ApplicationVpcVPCGWF6FDF6ED": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "ApplicationVpcIGWAE2F3715"
    },
    "VpcId": {
     "Ref": "ApplicationVpc8AE6A859"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/VPCGW"
   }
  },
  "ApplicationVpcRestrictDefaultSecurityGroupCustomResourceBAF9E77E": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "ApplicationVpc8AE6A859",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationVpc/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "ApplicationVpc8AE6A859",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "ElizaStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a",
    "aws:asset:property": "Code"
   }
  },
  "ClusterEB0386A7": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "ElizaStack/Cluster/Resource"
   }
  },
  "ApplicationFargateServiceLB253350AD": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ApplicationFargateServiceLBSecurityGroupB7B95D8B",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "ApplicationVpcPublicSubnet1Subnet7014005F"
     },
     {
      "Ref": "ApplicationVpcPublicSubnet2SubnetE792D9E8"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "ApplicationVpcPublicSubnet1DefaultRoute56736F6C",
    "ApplicationVpcPublicSubnet1RouteTableAssociation802F127D",
    "ApplicationVpcPublicSubnet2DefaultRoute7C19233F",
    "ApplicationVpcPublicSubnet2RouteTableAssociation396F9A40"
   ],
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/LB/Resource"
   }
  },
  "ApplicationFargateServiceLBSecurityGroupB7B95D8B": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB ElizaStackApplicationFargateServiceLB7947C3AA",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "ApplicationVpc8AE6A859"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/LB/SecurityGroup/Resource"
   }
  },
  "ApplicationFargateServiceLBSecurityGrouptoElizaStackApplicationFargateServiceSecurityGroupDB87F23580008C03FB03": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "ApplicationFargateServiceSecurityGroup344CD373",
      "GroupId"
     ]
    },
    "FromPort": 8000,
    "GroupId": {
     "Fn::GetAtt": [
      "ApplicationFargateServiceLBSecurityGroupB7B95D8B",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 8000
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/LB/SecurityGroup/to ElizaStackApplicationFargateServiceSecurityGroupDB87F235:8000"
   }
  },
  "ApplicationFargateServiceLBPublicListener96242D1D": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "ApplicationFargateServiceLBPublicListenerECSGroup416E2F95"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ApplicationFargateServiceLB253350AD"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/LB/PublicListener/Resource"
   }
  },
  "ApplicationFargateServiceLBPublicListenerECSGroup416E2F95": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "ApplicationVpc8AE6A859"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "ApplicationFargateServiceTaskDefTaskRole7E741D7D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/TaskDef/TaskRole/Resource"
   }
  },
  "ApplicationFargateServiceTaskDefC9027561": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:689e46f5ffafa1e0f81f114b5dfd7694d2d1e291d9bd855e4f7b601d2b2403d0"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "ApplicationFargateServiceTaskDefwebLogGroup9B9EE847"
        },
        "awslogs-stream-prefix": "ApplicationFargateService",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "web",
      "PortMappings": [
       {
        "ContainerPort": 8000,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "ApplicationFargateServiceTaskDefExecutionRole3013AB55",
      "Arn"
     ]
    },
    "Family": "ElizaStackApplicationFargateServiceTaskDefCA30F952",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "ApplicationFargateServiceTaskDefTaskRole7E741D7D",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/TaskDef/Resource"
   }
  },
  "ApplicationFargateServiceTaskDefwebLogGroup9B9EE847": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/TaskDef/web/LogGroup/Resource"
   }
  },
  "ApplicationFargateServiceTaskDefExecutionRole3013AB55": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/TaskDef/ExecutionRole/Resource"
   }
  },
  "ApplicationFargateServiceTaskDefExecutionRoleDefaultPolicy0FE3C6D2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ApplicationFargateServiceTaskDefwebLogGroup9B9EE847",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApplicationFargateServiceTaskDefExecutionRoleDefaultPolicy0FE3C6D2",
    "Roles": [
     {
      "Ref": "ApplicationFargateServiceTaskDefExecutionRole3013AB55"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/TaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "ApplicationFargateService9E1CC844": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "ClusterEB0386A7"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "web",
      "ContainerPort": 8000,
      "TargetGroupArn": {
       "Ref": "ApplicationFargateServiceLBPublicListenerECSGroup416E2F95"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "ApplicationFargateServiceSecurityGroup344CD373",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "ApplicationVpcPrivateSubnet1Subnet2EB6F2CA"
       },
       {
        "Ref": "ApplicationVpcPrivateSubnet2SubnetD832FF78"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "ApplicationFargateServiceTaskDefC9027561"
    }
   },
   "DependsOn": [
    "ApplicationFargateServiceLBPublicListenerECSGroup416E2F95",
    "ApplicationFargateServiceLBPublicListener96242D1D",
    "ApplicationFargateServiceTaskDefTaskRole7E741D7D"
   ],
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/Service/Service"
   }
  },
  "ApplicationFargateServiceSecurityGroup344CD373": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "ElizaStack/ApplicationFargateService/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "ApplicationVpc8AE6A859"
    }
   },
   "DependsOn": [
    "ApplicationFargateServiceTaskDefTaskRole7E741D7D"
   ],
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/Service/SecurityGroup/Resource"
   }
  },
  "ApplicationFargateServiceSecurityGroupfromElizaStackApplicationFargateServiceLBSecurityGroup00A999D780006B052FCB": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 8000,
    "GroupId": {
     "Fn::GetAtt": [
      "ApplicationFargateServiceSecurityGroup344CD373",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ApplicationFargateServiceLBSecurityGroupB7B95D8B",
      "GroupId"
     ]
    },
    "ToPort": 8000
   },
   "DependsOn": [
    "ApplicationFargateServiceTaskDefTaskRole7E741D7D"
   ],
   "Metadata": {
    "aws:cdk:path": "ElizaStack/ApplicationFargateService/Service/SecurityGroup/from ElizaStackApplicationFargateServiceLBSecurityGroup00A999D7:8000"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31S227bMAz9lr4rWptiH5C6XRGg2wy76GtAy4zLRZYMkUoQGP73wXISp+2wJx4eHVK8LfXd91t9ewMHXph6t7BU6b4UMDsFB970aMIGmFFYP3qzw7BuocHVyCg0QRfYeSbx4fgAjArNUvdvnVHZ1r3lmcpjZcmUsXIoIzejwkfBV6gszvzMrZi9IRDy7iIewdM6H80vkGcQPMBR5YH2IDgnXjvB4PAimCo5eSsRMO8tOlElmhhIjs/Bxy7V8F/iqQnI/IVeu8QPCg3rPrORBcOoOsMfEBoYu+LdI27J0bmnz4x3AuQwXHGn2BLDnsw0pwmm7zYdyNgq61XXWTJpWi8e6gew4AzWn8LRAgsZ66GukoJcs1/q/t/RqYkP/rWOWNCdNGd89f4KoUG5DPLKHRRBq/vCT3tPNveWTFrUhAZlfcO6f/HNJcUZD4NKx1cKNOQaVSD7GMbhRBbfzu7WXeOf0HWj/KMqD35PNYZ0utnW/Y7SxXREmXd12sGg8qO8e/ftXt8t9f3NHyZahOiEWtTFZP8CQNL/L0QDAAA="
   },
   "Metadata": {
    "aws:cdk:path": "ElizaStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Outputs": {
  "ApplicationFargateServiceLoadBalancerDNS4B3CC412": {
   "Value": {
    "Fn::GetAtt": [
     "ApplicationFargateServiceLB253350AD",
     "DNSName"
    ]
   }
  },
  "ApplicationFargateServiceServiceURL85241383": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "ApplicationFargateServiceLB253350AD",
        "DNSName"
       ]
      }
     ]
    ]
   }
  },
  "LoadBalancerDNS": {
   "Value": {
    "Ref": "ClusterEB0386A7"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}